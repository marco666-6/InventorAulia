@model Invenion.Models.Equipment
@{
    ViewData["Title"] = "Add Equipment";
}

<div class="page-container">
    <!-- Page Header -->
    <div class="page-header">
        <div class="page-title">
            <h1>Add Equipment</h1>
            <p class="text-muted">Add new equipment to your inventory</p>
        </div>
        <div class="page-actions">
            <a href="@Url.Action("Equipment", "Admin")" class="btn btn-outline-secondary">
                <i class='bx bx-arrow-back'></i> Back to Equipment
            </a>
        </div>
    </div>

    <!-- Add Equipment Form -->
    <div class="card">
        <div class="card-header">
            <h5 class="card-title mb-0">Equipment Information</h5>
        </div>
        <div class="card-body">
            <form asp-action="AddEquipment" method="post" id="addEquipmentForm">
                @Html.AntiForgeryToken()

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="EquipmentCode" class="form-label required">Equipment Code</label>
                            <input asp-for="EquipmentCode" class="form-control" placeholder="Enter equipment code" />
                            <span asp-validation-for="EquipmentCode" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="EquipmentName" class="form-label required">Equipment Name</label>
                            <input asp-for="EquipmentName" class="form-control" placeholder="Enter equipment name" />
                            <span asp-validation-for="EquipmentName" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="CategoryID" class="form-label required">Category</label>
                            <div class="input-group">
                                <select asp-for="CategoryID" class="form-select" id="categorySelect">
                                    <option value="">Select Category</option>
                                    @foreach (var category in ViewBag.Categories as List<Invenion.Models.EquipmentCategory>)
                                    {
                                        <option value="@category.CategoryID">@category.CategoryName</option>
                                    }
                                </select>
                                <button type="button" class="btn btn-outline-secondary" id="manageCategoriesBtn" title="Manage Categories">
                                    <i class='bx bx-cog'></i>
                                </button>
                            </div>
                            <span asp-validation-for="CategoryID" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="Brand" class="form-label">Brand</label>
                            <input asp-for="Brand" class="form-control" placeholder="Enter brand" />
                            <span asp-validation-for="Brand" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="Model" class="form-label">Model</label>
                            <input asp-for="Model" class="form-control" placeholder="Enter model" />
                            <span asp-validation-for="Model" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="SerialNumber" class="form-label">Serial Number</label>
                            <input asp-for="SerialNumber" class="form-control" placeholder="Enter serial number" />
                            <span asp-validation-for="SerialNumber" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="PurchaseDate" class="form-label">Purchase Date</label>
                            <input asp-for="PurchaseDate" type="date" class="form-control" />
                            <span asp-validation-for="PurchaseDate" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="form-group mb-4">
                    <label asp-for="Description" class="form-label">Description</label>
                    <textarea asp-for="Description" class="form-control" rows="3" placeholder="Enter equipment description"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">
                        <i class='bx bx-plus'></i> Add Equipment
                    </button>
                    <a href="@Url.Action("Equipment", "Admin")" class="btn btn-secondary">
                        <i class='bx bx-x'></i> Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Category Management Modal -->
<div class="modal fade" id="categoryModal" tabindex="-1" aria-labelledby="categoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="categoryModalLabel">
                    <i class='bx bx-category'></i> Manage Categories
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Add Category Form -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0">Add New Category</h6>
                    </div>
                    <div class="card-body">
                        <form id="addCategoryForm">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Category Name <span class="text-danger">*</span></label>
                                        <input type="text" id="newCategoryName" class="form-control" placeholder="Enter category name" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Description</label>
                                        <input type="text" id="newCategoryDescription" class="form-control" placeholder="Enter description">
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-success btn-sm">
                                <i class='bx bx-plus'></i> Add Category
                            </button>
                        </form>
                    </div>
                </div>

                <!-- Categories List -->
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">Existing Categories</h6>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover" id="categoriesTable">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Description</th>
                                        <th>Created Date</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="categoriesTableBody">
                                    <!-- Categories will be loaded here -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModalLabel">
                    <i class='bx bx-edit'></i> Edit Category
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editCategoryForm">
                    <input type="hidden" id="editCategoryId">
                    <div class="form-group mb-3">
                        <label class="form-label">Category Name <span class="text-danger">*</span></label>
                        <input type="text" id="editCategoryName" class="form-control" required>
                    </div>
                    <div class="form-group mb-3">
                        <label class="form-label">Description</label>
                        <input type="text" id="editCategoryDescription" class="form-control">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveEditCategory">
                    <i class='bx bx-save'></i> Save Changes
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    .page-container {
        padding: 20px;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
    }

    .page-title h1 {
        font-size: 1.8rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 5px;
    }

    .card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        border: none;
    }

    .card-header {
        background: transparent;
        border-bottom: 1px solid #eee;
        padding: 20px 25px;
    }

    .card-body {
        padding: 25px;
    }

    .form-label.required::after {
        content: " *";
        color: #dc3545;
    }

    .form-control, .form-select {
        border: 1px solid #e0e6ed;
        border-radius: 8px;
        padding: 12px 15px;
        font-size: 14px;
        transition: all 0.2s;
    }

        .form-control:focus, .form-select:focus {
            border-color: #006A4E;
            box-shadow: 0 0 0 0.2rem rgba(0, 106, 78, 0.25);
        }

    .form-actions {
        display: flex;
        gap: 10px;
        padding-top: 20px;
        border-top: 1px solid #eee;
    }

    .btn {
        padding: 12px 20px;
        border-radius: 8px;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

    .btn-primary {
        background: linear-gradient(135deg, #006A4E 0%, #003200 100%);
        border: none;
        color: white;
    }

        .btn-primary:hover {
            background: linear-gradient(135deg, #00CC99 0%, #006A4E 100%);
            color: white;
        }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

    .btn-outline-secondary {
        color: #6c757d;
        border-color: #6c757d;
    }

        .btn-outline-secondary:hover {
            background-color: #6c757d;
            border-color: #6c757d;
        }

    .text-danger {
        font-size: 0.875rem;
        margin-top: 5px;
    }

    .input-group .btn {
        padding: 12px 15px;
    }

    .modal-content {
        border-radius: 12px;
        border: none;
        box-shadow: 0 10px 30px rgba(0,0,0,0.2);
    }

    .modal-header {
        border-bottom: 1px solid #eee;
        padding: 20px 25px;
    }

    .modal-body {
        padding: 25px;
    }

    .modal-footer {
        border-top: 1px solid #eee;
        padding: 15px 25px;
    }

    .table th {
        font-weight: 600;
        color: #2c3e50;
        border-bottom: 2px solid #eee;
    }

    .btn-sm {
        padding: 8px 16px;
        font-size: 0.875rem;
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
    }

    .btn-warning {
        background-color: #ffc107;
        border-color: #ffc107;
        color: #212529;
    }

    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
    }
</style>

@section Scripts {
    <script>
        let categoriesData = [];

        $(document).ready(function() {
            // Open category management modal
            $('#manageCategoriesBtn').click(function() {
                loadCategories();
                $('#categoryModal').modal('show');
            });

            // Add category form submission
            $('#addCategoryForm').submit(function(e) {
                e.preventDefault();
                addCategory();
            });

            // Edit category form submission
            $('#saveEditCategory').click(function() {
                updateCategory();
            });

            // Form submission with SweetAlert
            $('#addEquipmentForm').on('submit', function(e) {
                e.preventDefault();

                var isValid = true;
                var requiredFields = ['EquipmentCode', 'EquipmentName', 'CategoryID'];

                requiredFields.forEach(function(fieldName) {
                    var field = $('[name="' + fieldName + '"]');
                    if (!field.val().trim()) {
                        isValid = false;
                        field.addClass('is-invalid');
                    } else {
                        field.removeClass('is-invalid');
                    }
                });

                if (isValid) {
                    Swal.fire({
                        title: 'Add Equipment?',
                        text: 'Are you sure you want to add this equipment?',
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonColor: '#006A4E',
                        cancelButtonColor: '#6c757d',
                        confirmButtonText: 'Yes, add it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            Swal.fire({
                                title: 'Adding Equipment...',
                                allowOutsideClick: false,
                                didOpen: () => {
                                    Swal.showLoading();
                                }
                            });

                            this.submit();
                        }
                    });
                } else {
                    Swal.fire({
                        title: 'Validation Error',
                        text: 'Please fill in all required fields.',
                        icon: 'error',
                        confirmButtonColor: '#006A4E'
                    });
                }
            });

            $('input, select, textarea').on('input change', function() {
                $(this).removeClass('is-invalid');
            });
        });

        function loadCategories() {
            $.get('@Url.Action("GetCategories", "Admin")', function(response) {
                if (response.success) {
                    console.log(response);
                    categoriesData = response.data;
                    displayCategories();
                } else {
                    Swal.fire('Error', response.message, 'error');
                }
            });
        }

        function displayCategories() {
            const tbody = $('#categoriesTableBody');
            tbody.empty();

            categoriesData.forEach(function(category) {
                const row = `
                    <tr>
                        <td><strong>${category.categoryName}</strong></td>
                        <td>${category.description || '-'}</td>
                        <td>${new Date(category.createdDate).toLocaleDateString()}</td>
                        <td>
                            <button class="btn btn-warning btn-sm me-1" onclick="editCategory(${category.categoryID})">
                                <i class='bx bx-edit'></i> Edit
                            </button>
                            <button class="btn btn-danger btn-sm" onclick="deleteCategory(${category.categoryID})">
                                <i class='bx bx-trash'></i> Delete
                            </button>
                        </td>
                    </tr>
                `;
                tbody.append(row);
            });
        }

        function addCategory() {
            const name = $('#newCategoryName').val().trim();
            const description = $('#newCategoryDescription').val().trim();

            if (!name) {
                Swal.fire('Error', 'Category name is required.', 'error');
                return;
            }

            $.post('@Url.Action("AddCategory", "Admin")', {
                categoryName: name,
                description: description
            }, function(response) {
                if (response.success) {
                    Swal.fire('Success', response.message, 'success');
                    $('#newCategoryName').val('');
                    $('#newCategoryDescription').val('');
                    loadCategories();
                    refreshCategorySelect();
                } else {
                    Swal.fire('Error', response.message, 'error');
                }
            });
        }

        function editCategory(categoryId) {
            const category = categoriesData.find(c => c.categoryID === categoryId);
            if (category) {
                $('#editCategoryId').val(category.categoryID);
                $('#editCategoryName').val(category.categoryName);
                $('#editCategoryDescription').val(category.description || '');
                $('#editCategoryModal').modal('show');
            }
        }

        function updateCategory() {
            const id = $('#editCategoryId').val();
            const name = $('#editCategoryName').val().trim();
            const description = $('#editCategoryDescription').val().trim();

            if (!name) {
                Swal.fire('Error', 'Category name is required.', 'error');
                return;
            }

            $.post('@Url.Action("UpdateCategory", "Admin")', {
                categoryId: id,
                categoryName: name,
                description: description
            }, function(response) {
                if (response.success) {
                    Swal.fire('Success', response.message, 'success');
                    $('#editCategoryModal').modal('hide');
                    loadCategories();
                    refreshCategorySelect();
                } else {
                    Swal.fire('Error', response.message, 'error');
                }
            });
        }

        function deleteCategory(categoryId) {
            const category = categoriesData.find(c => c.categoryID === categoryId);

            Swal.fire({
                title: 'Delete Category?',
                text: `Are you sure you want to delete "${category.categoryName}"? This action cannot be undone.`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("DeleteCategory", "Admin")', {
                        categoryId: categoryId
                    }, function(response) {
                        if (response.success) {
                            Swal.fire('Deleted!', response.message, 'success');
                            loadCategories();
                            refreshCategorySelect();
                        } else {
                            Swal.fire('Error', response.message, 'error');
                        }
                    });
                }
            });
        }

        function refreshCategorySelect() {
            $.get('@Url.Action("GetCategories", "Admin")', function(response) {
                if (response.success) {
                    const select = $('#categorySelect');
                    const currentValue = select.val();
                    select.empty();
                    select.append('<option value="">Select Category</option>');

                    response.data.forEach(function(category) {
                        select.append(`<option value="${category.CategoryID}">${category.CategoryName}</option>`);
                    });

                    select.val(currentValue);
                }
            });
        }
    </script>
}