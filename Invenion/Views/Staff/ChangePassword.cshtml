@model Invenion.Models.ViewModels.ChangePasswordViewModel
@{
    ViewData["Title"] = "Change Password";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<div class="change-password-container">
    <!-- Page Header -->
    <div class="page-header">
        <div class="page-title">
            <h1>Change Password</h1>
            <p class="text-muted">Update your account password</p>
        </div>
        <div class="page-actions">
            <a href="@Url.Action("Dashboard", "Staff")" class="btn btn-outline-secondary">
                <i class='bx bx-arrow-back'></i> Back to Dashboard
            </a>
        </div>
    </div>

    <!-- Change Password Form -->
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8 col-sm-10">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class='bx bx-lock-alt'></i>
                        Change Password
                    </h5>
                </div>
                <div class="card-body">
                    <form asp-action="ChangePassword" method="post" id="changePasswordForm">
                        @Html.AntiForgeryToken()

                        <div class="mb-3">
                            <label asp-for="CurrentPassword" class="form-label">Current Password</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class='bx bx-lock'></i>
                                </span>
                                <input asp-for="CurrentPassword" type="password" class="form-control" placeholder="Enter current password" required>
                                <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('CurrentPassword')">
                                    <i class='bx bx-show' id="toggleCurrentPassword"></i>
                                </button>
                            </div>
                            <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="NewPassword" class="form-label">New Password</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class='bx bx-key'></i>
                                </span>
                                <input asp-for="NewPassword" type="password" class="form-control" placeholder="Enter new password" required>
                                <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('NewPassword')">
                                    <i class='bx bx-show' id="toggleNewPassword"></i>
                                </button>
                            </div>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                            <div class="form-text">
                                Password must be at least 6 characters long and contain letters and numbers.
                            </div>
                        </div>

                        <div class="mb-4">
                            <label asp-for="ConfirmPassword" class="form-label">Confirm New Password</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class='bx bx-key'></i>
                                </span>
                                <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder="Confirm new password" required>
                                <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('ConfirmPassword')">
                                    <i class='bx bx-show' id="toggleConfirmPassword"></i>
                                </button>
                            </div>
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class='bx bx-check'></i>
                                Change Password
                            </button>
                            <a href="@Url.Action("Profile", "Staff")" class="btn btn-outline-secondary">
                                <i class='bx bx-x'></i>
                                Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Security Tips -->
            <div class="card mt-4">
                <div class="card-header">
                    <h6 class="card-title mb-0">
                        <i class='bx bx-shield'></i>
                        Security Tips
                    </h6>
                </div>
                <div class="card-body">
                    <ul class="security-tips">
                        <li>
                            <i class='bx bx-check text-success'></i>
                            Use a strong password with at least 8 characters
                        </li>
                        <li>
                            <i class='bx bx-check text-success'></i>
                            Include uppercase and lowercase letters, numbers, and special characters
                        </li>
                        <li>
                            <i class='bx bx-check text-success'></i>
                            Don't use personal information in your password
                        </li>
                        <li>
                            <i class='bx bx-check text-success'></i>
                            Don't share your password with others
                        </li>
                        <li>
                            <i class='bx bx-check text-success'></i>
                            Change your password regularly
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .change-password-container {
        padding: 20px;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
    }

    .page-title h1 {
        font-size: 2rem;
        font-weight: 600;
        color: #003200;
        margin-bottom: 5px;
    }

    .card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        border: none;
    }

    .card-header {
        background: transparent;
        border-bottom: 1px solid #eee;
        padding: 20px 25px;
    }

        .card-header .card-title {
            color: #006A4E;
        }

    .card-body {
        padding: 25px;
    }

    .form-label {
        font-weight: 500;
        color: #495057;
        margin-bottom: 8px;
    }

    .input-group {
        position: relative;
    }

    .input-group-text {
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        color: #6c757d;
    }

    .form-control {
        border: 1px solid #dee2e6;
        border-radius: 0.375rem;
        padding: 12px 15px;
        font-size: 0.95rem;
        transition: all 0.2s;
    }

        .form-control:focus {
            border-color: #00CC99;
            box-shadow: 0 0 0 0.2rem rgba(0, 204, 153, 0.25);
        }

    .btn {
        border-radius: 8px;
        padding: 12px 20px;
        font-weight: 500;
        transition: all 0.2s;
    }

    .btn-primary {
        background: linear-gradient(135deg, #006A4E 0%, #00CC99 100%);
        border: none;
    }

        .btn-primary:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(0, 106, 78, 0.3);
        }

    .btn-outline-secondary {
        border-color: #dee2e6;
        color: #6c757d;
    }

        .btn-outline-secondary:hover {
            background: #f8f9fa;
            border-color: #dee2e6;
            color: #495057;
        }

    .security-tips {
        list-style: none;
        padding: 0;
        margin: 0;
    }

        .security-tips li {
            display: flex;
            align-items: center;
            padding: 8px 0;
            font-size: 0.9rem;
            color: #6c757d;
        }

            .security-tips li i {
                margin-right: 10px;
                font-size: 16px;
            }

    .text-danger {
        font-size: 0.875rem;
        margin-top: 5px;
    }

    .form-text {
        font-size: 0.85rem;
        color: #6c757d;
        margin-top: 5px;
    }
</style>

@section Scripts {
    <script>
        // Toggle password visibility
        function togglePassword(fieldName) {
            const passwordField = document.getElementById(fieldName);
            const toggleIcon = document.getElementById('toggle' + fieldName);

            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                toggleIcon.className = 'bx bx-hide';
            } else {
                passwordField.type = 'password';
                toggleIcon.className = 'bx bx-show';
            }
        }

        // Form submission with SweetAlert
        document.getElementById('changePasswordForm').addEventListener('submit', function(e) {
            e.preventDefault();

            const currentPassword = document.getElementById('CurrentPassword').value;
            const newPassword = document.getElementById('NewPassword').value;
            const confirmPassword = document.getElementById('ConfirmPassword').value;

            // Basic validation
            if (!currentPassword || !newPassword || !confirmPassword) {
                Swal.fire({
                    title: 'Missing Information',
                    text: 'Please fill in all password fields.',
                    icon: 'warning',
                    confirmButtonColor: '#006A4E'
                });
                return;
            }

            if (newPassword !== confirmPassword) {
                Swal.fire({
                    title: 'Passwords Don\'t Match',
                    text: 'New password and confirmation password must match.',
                    icon: 'error',
                    confirmButtonColor: '#006A4E'
                });
                return;
            }

            if (newPassword.length < 6) {
                Swal.fire({
                    title: 'Password Too Short',
                    text: 'New password must be at least 6 characters long.',
                    icon: 'warning',
                    confirmButtonColor: '#006A4E'
                });
                return;
            }

            // Confirm password change
            Swal.fire({
                title: 'Change Password?',
                text: 'Are you sure you want to change your password?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#006A4E',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, change it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Show loading
                    Swal.fire({
                        title: 'Changing Password...',
                        text: 'Please wait while we update your password.',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        showConfirmButton: false,
                        willOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    // Submit the form
                    this.submit();
                }
            });
        });

        // Password strength indicator
        document.getElementById('NewPassword').addEventListener('input', function() {
            const password = this.value;
            const strengthIndicator = document.getElementById('passwordStrength');

            if (password.length === 0) return;

            let strength = 0;
            if (password.length >= 8) strength++;
            if (/[A-Z]/.test(password)) strength++;
            if (/[a-z]/.test(password)) strength++;
            if (/[0-9]/.test(password)) strength++;
            if (/[^A-Za-z0-9]/.test(password)) strength++;

            let strengthText = '';
            let strengthClass = '';

            switch (strength) {
                case 0:
                case 1:
                    strengthText = 'Very Weak';
                    strengthClass = 'text-danger';
                    break;
                case 2:
                    strengthText = 'Weak';
                    strengthClass = 'text-warning';
                    break;
                case 3:
                    strengthText = 'Fair';
                    strengthClass = 'text-info';
                    break;
                case 4:
                    strengthText = 'Good';
                    strengthClass = 'text-success';
                    break;
                case 5:
                    strengthText = 'Strong';
                    strengthClass = 'text-success fw-bold';
                    break;
            }

            // Create or update strength indicator
            let indicator = document.getElementById('passwordStrength');
            if (!indicator) {
                indicator = document.createElement('div');
                indicator.id = 'passwordStrength';
                indicator.className = 'form-text mt-1';
                this.parentNode.parentNode.appendChild(indicator);
            }

            indicator.innerHTML = `Password Strength: <span class="${strengthClass}">${strengthText}</span>`;
        });
    </script>
}